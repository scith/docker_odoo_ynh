#!/bin/bash
app=dockerodoo
set -e

# Retrieve arguments
domain=$1
is_public=$2

sudo yunohost app checkport 8069
if [[ ! $? -eq 0 ]]; then
  exit 1
fi

# Check domain/path availability
domain=${domain}"/"
sudo yunohost app checkurl $domain -a $app \
	|| (echo "Path not available: $domain" && exit 1)

# Remove trailing "/" for next commands
domain=${domain%/}
sudo yunohost app setting $app domain -v $domain

# Install Docker if it is not installed yet
if [ -f /usr/bin/docker ]; then
	echo "Docker is already installed"
else
	echo "Docker will now be installed"
	sudo apt-get install curl -y -qq
	sudo curl -sSL https://get.docker.com/ | sh
	sudo usermod -aG docker admin
	newgrp docker
	sudo yunohost service add docker
	if [ -d /run/systemd/system ]; then
		sudo systemctl enable docker
	else
		sudo update-rc.d docker defaults
	fi
fi
sudo yunohost service start docker

# Create Docker container
sudo docker run -d --restart always -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=odoo --name odoodb postgres
sudo docker run -d --restart always -p 8069:8069 --name odoo --link odoodb:db -t odoo

# Manage container as daemon with systemd
if [ -d /run/systemd/system ]; then
	sudo cp ../conf/systemd.service /etc/systemd/system/container-$app.service
	sudo chmod 777 /etc/systemd/system/container-$app.service
	sudo systemctl enable /etc/systemd/system/container-$app.service
	sudo systemctl daemon-reload
	sudo yunohost service add container-$app
fi

# Configure Nginx and reload
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

if [ "$is_public" = "Yes" ];
then
	sudo yunohost app setting $app skipped_uris -v "/"
fi

sudo service nginx reload
echo $?
